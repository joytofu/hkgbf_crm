# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    encoders:
            FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
            ROLE_REGULAR:     ROLE_USER
            ROLE_AGENT:       ROLE_AGENT
            ROLE_AGENT_ADMIN: ROLE_AGENT_ADMIN
            ROLE_ADMIN:       [ROLE_ADMIN,ROLE_AGENT]
            ROLE_SUPER_ADMIN: [ROLE_ALLOWED_TO_SWITCH,ROLE_AGENT,ROLE_ADMIN,ROLE_AGENT_ADMIN]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
               users:
                  kcswag:
                     password: jntz020
                     roles: ROLE_SUPER_ADMIN

        #hkgbf_crm_db_provider:
            #entity: { class: AppBundle\Entity\User, property: username }

        fos_userbundle:
                    id: fos_user.user_provider.username

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
               pattern: ^/
               form_login:
                     provider: fos_userbundle
                     csrf_provider: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
                     default_target_path: redirectAfterLogin
                     always_use_default_target_path: false
                     #default_target_path:            /
                     target_path_parameter:          _target_path
                     use_referer:                    false

                     # field names for the username and password fields
                     username_parameter: _username
                     password_parameter: _password

                     # csrf token options
                     csrf_parameter:       _csrf_token
                     intention:            authenticate
                     csrf_provider:        my.csrf_token_generator.id

                     require_previous_session: true

                     login_path: /login
                     check_path: /login_check
                     use_forward: false
               logout:
                     path: /logout
                     target: /login
               anonymous:  true




    access_control:
            - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/userdetail/, role: ROLE_SUPER_ADMIN }


